{"ast":null,"code":"const nodemailer = require('nodemailer');\n\nconst {\n  google\n} = require('googleapis'); // These id's and secrets should come from .env file.\n\n\nconst CLIENT_ID = 'YOUR CLIENT ID';\nconst CLEINT_SECRET = 'YOUR CLIENT SECRET';\nconst REDIRECT_URI = 'Your REDIRECT URL';\nconst REFRESH_TOKEN = 'YOUR REFRESH TOKEN';\nconst oAuth2Client = new google.auth.OAuth2(CLIENT_ID, CLEINT_SECRET, REDIRECT_URI);\noAuth2Client.setCredentials({\n  refresh_token: REFRESH_TOKEN\n});\n\nasync function sendMail(clientmail, faultyurl) {\n  try {\n    const accessToken = await oAuth2Client.getAccessToken();\n    const transport = nodemailer.createTransport({\n      service: 'gmail',\n      auth: {\n        type: 'OAuth2',\n        user: 'yours authorised email address',\n        clientId: CLIENT_ID,\n        clientSecret: CLEINT_SECRET,\n        refreshToken: REFRESH_TOKEN,\n        accessToken: accessToken\n      }\n    });\n    const mailOptions = {\n      from: 'subham.chowdhury.bksc@gmail.com',\n      to: `${clientmail}`,\n      subject: 'Hello from gmail using API',\n      text: 'Hello from YourURLTester',\n      html: `<h1>url:${faultyurl}, FAILED!!</h1>`\n    };\n    const result = await transport.sendMail(mailOptions);\n    return result;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport default sendMail;","map":{"version":3,"sources":["/home/subham/Desktop/Personal/assignment/src/gmail-api.js"],"names":["nodemailer","require","google","CLIENT_ID","CLEINT_SECRET","REDIRECT_URI","REFRESH_TOKEN","oAuth2Client","auth","OAuth2","setCredentials","refresh_token","sendMail","clientmail","faultyurl","accessToken","getAccessToken","transport","createTransport","service","type","user","clientId","clientSecret","refreshToken","mailOptions","from","to","subject","text","html","result","error"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,YAAD,CAA1B,C,CAEA;;;AACA,MAAME,SAAS,GAAG,gBAAlB;AACA,MAAMC,aAAa,GAAG,oBAAtB;AACA,MAAMC,YAAY,GAAG,mBAArB;AACA,MAAMC,aAAa,GAAG,oBAAtB;AAEA,MAAMC,YAAY,GAAG,IAAIL,MAAM,CAACM,IAAP,CAAYC,MAAhB,CACnBN,SADmB,EAEnBC,aAFmB,EAGnBC,YAHmB,CAArB;AAKAE,YAAY,CAACG,cAAb,CAA4B;AAAEC,EAAAA,aAAa,EAAEL;AAAjB,CAA5B;;AAEA,eAAeM,QAAf,CAAwBC,UAAxB,EAAoCC,SAApC,EAA+C;AAC7C,MAAI;AACF,UAAMC,WAAW,GAAG,MAAMR,YAAY,CAACS,cAAb,EAA1B;AAEA,UAAMC,SAAS,GAAGjB,UAAU,CAACkB,eAAX,CAA2B;AAC3CC,MAAAA,OAAO,EAAE,OADkC;AAE3CX,MAAAA,IAAI,EAAE;AACJY,QAAAA,IAAI,EAAE,QADF;AAEJC,QAAAA,IAAI,EAAE,gCAFF;AAGJC,QAAAA,QAAQ,EAAEnB,SAHN;AAIJoB,QAAAA,YAAY,EAAEnB,aAJV;AAKJoB,QAAAA,YAAY,EAAElB,aALV;AAMJS,QAAAA,WAAW,EAAEA;AANT;AAFqC,KAA3B,CAAlB;AAYA,UAAMU,WAAW,GAAG;AAClBC,MAAAA,IAAI,EAAE,iCADY;AAElBC,MAAAA,EAAE,EAAG,GAAEd,UAAW,EAFA;AAGlBe,MAAAA,OAAO,EAAE,4BAHS;AAIlBC,MAAAA,IAAI,EAAE,0BAJY;AAKlBC,MAAAA,IAAI,EAAG,WAAUhB,SAAU;AALT,KAApB;AAQA,UAAMiB,MAAM,GAAG,MAAMd,SAAS,CAACL,QAAV,CAAmBa,WAAnB,CAArB;AACA,WAAOM,MAAP;AACD,GAzBD,CAyBE,OAAOC,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF;;AAED,eAAepB,QAAf","sourcesContent":["const nodemailer = require('nodemailer');\nconst { google } = require('googleapis');\n\n// These id's and secrets should come from .env file.\nconst CLIENT_ID = 'YOUR CLIENT ID';\nconst CLEINT_SECRET = 'YOUR CLIENT SECRET';\nconst REDIRECT_URI = 'Your REDIRECT URL';\nconst REFRESH_TOKEN = 'YOUR REFRESH TOKEN';\n\nconst oAuth2Client = new google.auth.OAuth2(\n  CLIENT_ID,\n  CLEINT_SECRET,\n  REDIRECT_URI\n);\noAuth2Client.setCredentials({ refresh_token: REFRESH_TOKEN });\n\nasync function sendMail(clientmail, faultyurl) {\n  try {\n    const accessToken = await oAuth2Client.getAccessToken();\n\n    const transport = nodemailer.createTransport({\n      service: 'gmail',\n      auth: {\n        type: 'OAuth2',\n        user: 'yours authorised email address',\n        clientId: CLIENT_ID,\n        clientSecret: CLEINT_SECRET,\n        refreshToken: REFRESH_TOKEN,\n        accessToken: accessToken,\n      },\n    });\n\n    const mailOptions = {\n      from: 'subham.chowdhury.bksc@gmail.com',\n      to: `${clientmail}`,\n      subject: 'Hello from gmail using API',\n      text: 'Hello from YourURLTester',\n      html: `<h1>url:${faultyurl}, FAILED!!</h1>`,\n    };\n\n    const result = await transport.sendMail(mailOptions);\n    return result;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport default sendMail;"]},"metadata":{},"sourceType":"module"}